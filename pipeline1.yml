---
jobs:
- name: build
  public: true
  serial_groups: [version]
  plan:
  - aggregate:
    - get: maven-resource
      trigger: true
    - get: version
      params: {pre: rc}
  - put: version
    params: {file: version/version}
  - put: maven-resource-image-rc
    params:
      build: maven-resource
      buildx_platforms: "linux/amd64,linux/arm64"
      tag: version/version
      tag_as_latest: false

- name: test
  public: true
  serial_groups: [version]
  plan:
  - aggregate:
    - get: project
      resource: maven-resource
      passed: [build]
    - get: maven-resource-image-rc
      trigger: true
      passed: [build]
    - get: version
      passed: [build]

- name: shipit
  public: true
  serial_groups: [version]
  plan:
  - aggregate:
    - get: project
      resource: maven-resource
      passed: [test]
    - get: maven-resource-image-rc
      passed: [test]
      params: {save: true}
    - get: version
      passed: [test]
      params: {bump: final}
    - get: pipeline-tasks
  - task: generate-github-release
    file: pipeline-tasks/generate-github-release/task.yml
    output_mapping: {task-output: generate-github-release-output}
  - task: generate-commitish
    file: pipeline-tasks/generate-commitish/task.yml
    output_mapping: {task-output: generate-commitish-output}
  - task: generate-release-notes
    file: pipeline-tasks/generate-release-notes-from-changelog/task.yml
    input_mapping: {task-input: project}
    output_mapping: {task-output: generate-release-notes-output}
  - put: github-release
    params:
      name: generate-github-release-output/release-name
      tag: generate-github-release-output/release-tag
      commitish: generate-commitish-output/commitish
      body: generate-release-notes-output/RELEASE_NOTES.md
  - put: version
    params: {file: version/version}
  - put: maven-resource-image-final
    params:
      load: maven-resource-image-rc
      tag: version/version
      tag_as_latest: true

- name: major
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: major, pre: rc}
  - put: version
    params: {file: version/version}

- name: minor
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: minor, pre: rc}
  - put: version
    params: {file: version/version}

- name: patch
  public: true
  serial_groups: [version]
  plan:
  - get: version
    passed: [shipit]
    params: {bump: patch, pre: rc}
    trigger: true
  - put: version
    params: {file: version/version}

resources:
- name: maven-resource
  type: git
  source:
    uri: {{git-uri}}
    branch: {{git-branch}}
    ignore_paths:
    - LICENSE
    - NOTICE.md
    - pipeline.yml
    - README.md

- name: version
  type: semver
  source:
    driver: git
    initial_version: 1.0.0-rc.0
    uri: {{git-uri-semver}}
    branch: version
    file: version

- name: maven-resource-image-rc
  type: docker-image
  source:
    repository: {{docker-repository-rc}}
    username: ((docker.username))
    password: ((docker.password))

- name: maven-resource-image-final
  type: docker-image
  source:
    repository: {{docker-repository-final}}
    username: ((docker.username))
    password: ((docker.password))

- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-uri}}
    branch: {{pipeline-tasks-git-branch}}

- name: github-release
  type: github-release
  source:
    owner: {{github-release-user}}
    repository: maven-resource
    access_token: ((github_access_token))
